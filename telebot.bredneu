import telebot
import config
API_TOKEN = config.token
bot = telebot.TeleBot(API_TOKEN)

@bot.message_handler(commands=['start'])
from telegram import Update  
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes  
import re  
  
@bot.message_handler(commands=['–û—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—è'])
def check_text(text):  

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):  
    await update.message.reply_text('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –æ—à–∏–±–∫–∏. –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å.')  
   
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):  
    text = update.message.text  
    corrected_text = check_text(text)  
    await update.message.reply_text(f'–í–∞—à —Ç–µ–∫—Å—Ç: \n{corrected_text}\n –û—à–∏–±–æ–∫ –≤ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–µ: {len(text) - len(corrected_text)}')  
  
def main():  
    app = Application.builder().add_handler(CommandHandler('–û—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—è', –û—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—è)).add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message)).build()  
    app.run_polling(poll_interval=1)  
  
if name == 'main':  
    main()

if __name__ == '__main__':
     bot.infinity_polling()
 from telegram import Update  
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes  
import re  
  
@bot.message_handler(commands=['–ö—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ'])
def summarize_content(text):  
    
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):  
    await update.message.reply_text('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∞—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è.')  
   
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):  
    try:  
        content = update.message.text  
        summary = summarize_content(content)  
        await update.message.reply_text(f'–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {summary}')  
    except Exception as e:  
        await update.message.reply_text('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')  
   
def main():  
    app = Application.builder().add_handler(CommandHandler('start', start)).add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message)).build()  
    app.run_polling(poll_interval=1)  
  
if __name__ == '__main__':  
    main()  
–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –ª—é–±—É—é –∫–æ–º–∞–Ω–¥—É, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É , —á—Ç–æ —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å

–ù–∞–¥–µ—é—Å—å –≤—ã —Å—Ç–∞–Ω–∏—Ç–µ –±–æ–ª–µ–µ –∞–∫–∫—É—Ä–∞—Ç–Ω—ã–º–∏ –∏ –Ω–∞—á–∏—Ç–∞–Ω–Ω—ã–º–∏ –≤ —Ç–µ–∫—Å—Ç–∞—Ö , –Ω–∞—É—á–∏—Ç–µ—Å—å –∏—Å–ø—Ä–æ–≤–ª—è—Ç—å —Å–≤–æ–∏ –æ—à–∏–±–∫–∏

–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /help —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.\
""")

@bot.message_handler(commands=['help'])
def send_help(message):
    user_id = message.from_user.id
    
    help_text = f"""\
üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: üìã

/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–º–∞–Ω–¥
/clear - –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç –æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞
/decode - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –≤ —Ä–µ–∂–∏–º –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
/orf - –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏
/kops - –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ 

–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:
- –ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏ –ª—é–±—É—é –∫–æ–º–∞–Ω–¥—É –∏–∑ –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö, –∏ –±–æ—Ç –¥–∞—Å—Ç —Ç–æ, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ
"""
    bot.reply_to(message, help_text)

@bot.message_handler(commands=['clear'])
def clear_chat(message):
    chat_id = message.chat.id
    try:
        kurrent_mes_id = message.message_id
        for i in range(100):
            try:
                bot.delete_message(chat_id, kurrent_mes_id - i)
            except:
                break
        conf = bot.send_message(chat_id, "–ß–∞—Ç –æ—á–∏—â–µ–Ω! –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–∏—Ç—Å—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...")
        import time
        time.sleep(3)
        bot.delete_message(chat_id, conf.message_id)
        
    except Exception as e:
        bot.reply_to(message, f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç. –û—à–∏–±–∫–∞: {str(e)}")

@bot.message_handler(commands=['decode'])
def decode_mode(message):
    user_id = message.from_user.id
    user_modes[user_id] = True
    
    decode_text = """\


