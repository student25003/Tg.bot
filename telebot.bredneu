import telebot
bot = telebot.TeleBot('8093189675:AAFG0fAaDR5ymvsGUxfa3Lexci70lMQmnqY')

@bot.message_handler(commands=['start'])
from telegram import Update  
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes  
import re  
  
@bot.message_handler(commands=['Орфография'])
def check_text(text):  

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):  
    await update.message.reply_text('Привет! Я бот для проверки текста на ошибки. Введите текст, который хотите проверить.')  
   
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):  
    text = update.message.text  
    corrected_text = check_text(text)  
    await update.message.reply_text(f'Ваш текст: \n{corrected_text}\nОшибок в орфографии и грамматике: {len(text) - len(corrected_text)}')  
  
def main():  
    app = Application.builder().add_handler(CommandHandler('Орфография', Орфография)).add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message)).build()  
    app.run_polling(poll_interval=1)  
  
if name == 'main':  
    main()

if __name__ == '__main__':
     bot.infinity_polling()
 from telegram import Update  
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes  
import re  
  
@bot.message_handler(commands=['Краткое содержание'])
def summarize_content(text):  
    
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):  
    await update.message.reply_text('Привет! Я бот для создания краткого описания содержания.')  
   
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):  
    try:  
        content = update.message.text  
        summary = summarize_content(content)  
        await update.message.reply_text(f'Краткое описание: {summary}')  
    except Exception as e:  
        await update.message.reply_text('Произошла ошибка. Попробуйте снова.')  
   
def main():  
    app = Application.builder().add_handler(CommandHandler('start', start)).add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message)).build()  
    app.run_polling(poll_interval=1)  
  
if __name__ == '__main__':  
    main()  
